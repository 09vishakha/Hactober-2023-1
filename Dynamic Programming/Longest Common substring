//Given two strings. The task is to find the length of the longest common substring.
//eg., Input : S1 = "ABCDGH", S2 = "ACDGHR", n = 6, m = 6
// Output: 4
#include "bits/stdc++.h"
using namespace std;
class Solution{
    public:

    int longestCommonSubstr (string s1, string s2, int n, int m)
    {
        // your code here
        int ans=0;
        // using bottom-up approach
        vector<vector<int>> dp(n+1, vector<int>(m+1));
        //initializing the table where one of the string length is zero 
        for(int i=0; i<n; i++){
            for(int j=0; j<m; j++){
                if(i==0 || j==0) dp[i][j]=0;
            }
        }
        
        for(int i=1; i<n+1; i++){
            for(int j=1; j<m+1; j++){
                if(s1[i-1]==s2[j-1]){     
                    dp[i][j]=dp[i-1][j-1]+1;
                }
                else dp[i][j]=0;
                ans=max(ans,dp[i][j]);
            }
        }
        return ans;
    }
};

int main(){
    int n, m;
    cin>>n>>m;
    string s1, string s2;
    cin>>s1>>s2;
    Solution s;
    cout<<s.longestCommonSubstr(s1, s2, n, m);
}
